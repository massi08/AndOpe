<h4>Directives</h4><p>Les directives <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="sont">sont</span> des <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="attributs">attributs</span> <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="spéciaux">sp&eacute;ciaux</span> <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="avec">avec</span> le <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="prefixe">prefixe</span> v-. Les <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="valeurs">valeurs</span> <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="attendues">attendues</span> pour les <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="attributs">attributs</span> de directives <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="sont">sont</span> une unique expression JavaScript (A l&rsquo;exception de v-for, qui sera <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="expliquée">expliqu&eacute;e</span> plus loin). Le travail d&rsquo;une directive est d&rsquo;<span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="appliquer">appliquer</span> <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="réactivement">r&eacute;activement</span> des <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="effets">effets</span> <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="secondaires">secondaires</span> au DOM <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="quand">quand</span> la <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="valeur">valeur</span> de son expression change. Revenons &agrave; l&rsquo;exemple vu dans l&rsquo;introduction :</p><pre>&lt;p v-if=&quot;seen&quot;&gt;Maintenant vous me voyez&lt;/p&gt;</pre><p>Ici, la directive<strong>&nbsp;</strong><code><strong>v-if</strong></code> retirerait / ins&eacute;rerait l&rsquo;&eacute;lement <code><strong>&lt;p&gt;</strong></code> selon que l&rsquo;expression <code><strong>seen</strong></code><strong>&nbsp;</strong>soit <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="considérée">consid&eacute;r&eacute;e</span> comme fausse / vraie.</p><p>Certaines directives peuvent prendre un &ldquo;argument&rdquo;, indiqu&eacute; par un deux-points apr&egrave;s le nom de la directive. Par exemple, la directive <code><strong>v-bind</strong></code> est utilis&eacute;e pour mettre &agrave; jour <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="réactivement">r&eacute;activement</span> un attribut HTML :</p><pre>&lt;a v-bind:href=&quot;url&quot;&gt;&lt;/a&gt;</pre><p>Ici <code><strong>href</strong></code><strong>&nbsp;</strong>est un argument, qui dit &agrave; la directive <code><strong>v-bind</strong></code><strong>&nbsp;</strong>de lier l&rsquo;attribut <code>href</code> de l&rsquo;&eacute;l&eacute;ment &agrave; la <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="valeur">valeur</span> de l&rsquo;expression <code><strong>url</strong></code>.</p><p>Un autre exemple est la directive <code><strong>v-on</strong></code>, qui &eacute;coute les &eacute;v&eacute;nements du DOM :</p><pre>&lt;a v-on:click=&quot;doSomething&quot;&gt;</pre><p>Ici l&rsquo;argument est le nom de l&rsquo;&eacute;v&egrave;nement &agrave; &eacute;couter. Nous parlerons aussi plus en d&eacute;tail de la gestion des &eacute;v&egrave;nements.</p><p><strong><span style="font-size: 18px;">Modificateurs&nbsp;</span></strong></p><p>Les modificateurs <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="sont">sont</span> des suffixes <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="spéciaux">sp&eacute;ciaux</span> indiqu&eacute;s par un point, qui indique qu&rsquo;une directive devrait &ecirc;tre li&eacute;e d&rsquo;une mani&egrave;re sp&eacute;cifique. Par exemple, le modificateur <strong>.prevent&nbsp;</strong>dit &agrave; la directive <strong>v-on</strong> d&rsquo;appeler <strong>event.preventDefault()&nbsp;</strong>lorsque l&rsquo;&eacute;v&egrave;nement survient.</p><pre>&lt;form v-on:submit.prevent=&quot;onSubmit&quot;&gt;&lt;/form&gt;</pre><p><strong><span style="font-size: 18px;">Filtres&nbsp;</span></strong></p><p>Vue.js permet de d&eacute;finir des filtres qui peuvent &ecirc;tre utilis&eacute;s pour <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="appliquer">appliquer</span> des formatages de textes courants. Les filtres <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="sont">sont</span> utilisables &agrave; deux endroits : les interpolations &agrave; moustaches et les expressions de<strong>&nbsp;v-bind</strong>. Les filtres doivent &ecirc;tre ajout&eacute;s &agrave; la fin de l&rsquo;expression JavaScript, indiqu&eacute;s par le symbole de la barre verticale :</p><pre>&lt;!-- dans les moustaches --&gt;
{{ message | capitalize }}
&lt;!-- dans les v-bind --&gt;
&lt;div v-bind:id=&quot;rawId | formatId&quot;&gt;&lt;/div&gt;</pre><p>La fonction de filtre re&ccedil;oit toujours la <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="valeur">valeur</span> de l&rsquo;expression comme premier argument.</p><pre>new Vue({
  // ...
  filters: {
    capitalize: function (value) {
      if (!value) return &#39;&#39;
      value = value.toString()
      return value.charAt(0).toUpperCase() + value.slice(1)
    }
  }
})</pre><p>Les filtres peuvent &ecirc;tre cha&icirc;n&eacute;s :</p><pre>{{ message | filterA | filterB }}</pre><p>Les filtres <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="sont">sont</span> des fonctions JavaScript et peuvent donc recevoir des arguments :</p><pre>{{ message | filterA(&#39;arg1&#39;, arg2) }}</pre><p>Ici la cha&icirc;ne de caract&egrave;res &#39;arg1&#39; sera pass&eacute;e au filtre en tant que second argument, et la <span class="scayt-misspell-word" data-scayt-lang="en_US" data-scayt-word="valeur">valeur</span> de l&rsquo;expression arg2 sera &eacute;valu&eacute;e et pass&eacute;e en tant que troisi&egrave;me argument.</p>